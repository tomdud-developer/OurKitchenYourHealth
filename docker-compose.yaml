
version: "3.8"
services:
  mongodb_meals_microservice:
    image: mongo
    container_name: mongodb_meals_microservice
    ports:
      - "27017:27017"
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=username
      - MONGO_INITDB_ROOT_PASSWORD=password

  mongodb_orders_microservice:
    image: mongo
    container_name: mongodb_orders_microservice
    ports:
      - "27018:27018"
    command: mongod --port 27018
    volumes:
      - data:/data
    environment:
      - PORT=27018
      - MONGO_INITDB_ROOT_USERNAME=username
      - MONGO_INITDB_ROOT_PASSWORD=password

  mongo-express-meals:
    image: mongo-express
    container_name: mongo-express-meals
    restart: always
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=username
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb_meals_microservice

  mongo-express-orders:
    image: mongo-express
    container_name: mongo-express-orders
    restart: always
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_PORT=27018
      - ME_CONFIG_MONGODB_ADMINUSERNAME=username
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb_orders_microservice

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin_container
    restart: always
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1


volumes:
  data: {}

networks:
  default:
    name: mongodb_network