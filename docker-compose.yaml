
version: "3.8"
services:
  #postgres_auth_service:
   # image: 'postgres:latest'
    #ports:
     # - "5432:5432"
    #environment:
     # POSTGRES_USER: username
      #POSTGRES_PASSWORD: password
      #POSTGRES_DB: auth_database

  mongodb_meals_microservice:
    image: mongo
    container_name: mongodb_meals_microservice
    ports:
      - "27017:27017"
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=username
      - MONGO_INITDB_ROOT_PASSWORD=password

  mongodb_orders_microservice:
    image: mongo
    container_name: mongodb_orders_microservice
    ports:
      - "27018:27018"
    command: mongod --port 27018
    volumes:
      - data:/data
    environment:
      - PORT=27018
      - MONGO_INITDB_ROOT_USERNAME=username
      - MONGO_INITDB_ROOT_PASSWORD=password

  mongodb_restaurant_microservice:
    image: mongo
    container_name: mongodb_restaurant_microservice
    ports:
      - "27019:27019"
    volumes:
      - data:/data
    command: mongod --port 27019
    environment:
      - PORT=27019
      - MONGO_INITDB_ROOT_USERNAME=username
      - MONGO_INITDB_ROOT_PASSWORD=password

  mongo-express-meals:
    image: mongo-express
    container_name: mongo-express-meals
    restart: always
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=username
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb_meals_microservice

  mongo-express-orders:
    image: mongo-express
    container_name: mongo-express-orders
    restart: always
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_PORT=27018
      - ME_CONFIG_MONGODB_ADMINUSERNAME=username
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb_orders_microservice

  mongo-express-restaurants:
    image: mongo-express
    container_name: mongo-express-restaurants
    restart: always
    ports:
      - "8083:8081"
    environment:
      - ME_CONFIG_MONGODB_PORT=27019
      - ME_CONFIG_MONGODB_ADMINUSERNAME=username
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb_restaurant_microservice

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin_container
    restart: always
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    volumes:
      - data:/kafka
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  keycloak:
    image: jboss/keycloak:latest
    container_name: keycloak
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres
      - DB_DATABASE=${POSTGRESQL_DB}
      - DB_USER=${POSTGRESQL_USER}
      - DB_PASSWORD=${POSTGRESQL_PASS}
      - KEYCLOAK_USER=${KEYCLOAK_ADMIN_USERNAME}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - JBOSS_HOME=/opt/jboss/keycloak
      #- PROXY_ADDRESS_FORWARDING=true
    ports:
      - "8180:8080"
    depends_on:
      - postgres
    volumes:
      - ./keycloak/data:/opt/jboss/keycloak/standalone/data

  postgres:
    container_name: postgres_for_keycloak
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRESQL_DB}
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASS}
    volumes:
      - ./keycloak/db-data:/var/lib/postgresql/data

  postgres_payment_microservice:
    container_name: postgres_payment_microservice
    image: postgres:latest
    ports:
     - "5433:5432"
    environment:
      - POSTGRES_DB=payment_database
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password



volumes:
  data: {}

networks:
  default:
    name: mongodb_network
